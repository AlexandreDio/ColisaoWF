<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbHeroi.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhPgB6ANUlAElJrr6+vqorTNJGcM9EbcDAwFNTw1JSwagpSpYjQVxOtakpS+C9b1tb1EpKsLs9
        YffQe7S0weK/cLAyXvPCeMJAV70/ZGVWyKysrFRUw7gtUdyvbKAuWcqrY644Tqo3WvnSfLwxVbouUtPT
        01xc1v///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH/C05FVFNDQVBFMi4wAwEAAAAh/wtYTVAgRGF0YVhNUDw/
        eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1l
        dGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuNi1jMTQy
        IDc5LjE2MDkyNCwgMjAxNy8wNy8xMy0wMTowNjozOSAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRm
        PSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlw
        dGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9t
        bS8iIHhtbG5zOnN0UmVmPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VS
        ZWYjIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtcE1NOk9yaWdpbmFs
        RG9jdW1lbnRJRD0ieG1wLmRpZDowZmUzMTAxNi01N2U4LTMxNGUtYjcxYS0xZTY3ZDJiZTEyNjAiIHht
        cE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6RTFGNTQxMTlGQ0I1MTFFOEJFRDNCNTc3M0M5QjQ5REUiIHht
        cE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6RTFGNTQxMThGQ0I1MTFFOEJFRDNCNTc3M0M5QjQ5REUiIHht
        cDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENDIDIwMTggKFdpbmRvd3MpIj4gPHhtcE1NOkRl
        cml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6MjY5MzQzMTUtMjdmZC01MjRjLWI0Yzct
        M2EwMTVmOWEyNjQ2IiBzdFJlZjpkb2N1bWVudElEPSJ4bXAuZGlkOjBmZTMxMDE2LTU3ZTgtMzE0ZS1i
        NzFhLTFlNjdkMmJlMTI2MCIvPiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0
        YT4gPD94cGFja2V0IGVuZD0iciI/PgH//v38+/r5+Pf29fTz8vHw7+7t7Ovq6ejn5uXk4+Lh4N/e3dzb
        2tnY19bV1NPS0dDPzs3My8rJyMfGxcTDwsHAv769vLu6ubi3trW0s7KxsK+urayrqqmop6alpKOioaCf
        np2cm5qZmJeWlZSTkpGQj46NjIuKiYiHhoWEg4KBgH9+fXx7enl4d3Z1dHNycXBvbm1sa2ppaGdmZWRj
        YmFgX15dXFtaWVhXVlVUU1JRUE9OTUxLSklIR0ZFRENCQUA/Pj08Ozo5ODc2NTQzMjEwLy4tLCsqKSgn
        JiUkIyIhIB8eHRwbGhkYFxYVFBMSERAPDg0MCwoJCAcGBQQDAgEAACH5BAkAACUALAAAAAA+AHoAAAb/
        wJJwSCwaj8ikEtlhMEDQqHRKlTKWWOWzyq1SpNmwkersgpxbqngtNEu/bih73UTbGZC8fl91zv9GEl2A
        hEuCXoWJR4dVio5DjGqPjoJwU5OUg5iJkSAUcJucmqGAnWCkgBueUV8UG6iAHiKztCIVFX8JCLWzu7wI
        wCIJWb63vLm8ycoixLTGtMjL0sNYvsrR0svEz8dzusnBtNbCWQ8E5+jnD0kfFgPvA+7usObm6edJ7vD7
        A/T36OuQ6OP3zl86ewGPDCRo8B+BfATfWYAlIITFixYFJKmI8aJGVBU5Zgzx8YjIjiEoouS4EeVFlS5T
        IjnZEabLli5LhqKJESdK/w0Lai0IKpTorKBZOAqg6bOjhmRGjyajtkQp05kxn2aTljSmziI8LWrdeg1L
        WJIbF1xUazEq2VpdY/6JmiDBVF5UlShFOfct3rg357j1C7jj1zCD3yblufQPhwmQI0cWZw0BVQAkDpDY
        nJnzAc2cNx9IAqC06dMXLmxOvZpEFsyhY8vmnMTA7NuhX+MOrUBBbiS2d9/WLXxzb9+ugfMunll3b+a0
        lUP3THw6iQa2DQTfbKCB9c3YG4jXPh7AENjf06vffH728/XF0RdvL/s9/PuczQuRj5+Edv+cZeddevT1
        x54S8clW4HfIxbaEegv292Bopc23n4EVTmidfiXwd/9bg8JpOJuHB3ZoYHRJQHihcd9V+BtpJI5YYozM
        uYgiEiTQONyKJ4oIHYc0Dmidj7L9x92MnyWppJDTachfcNplZwCHSui4I2lXAiKfjbgtEWMi/HE5G5E3
        /mHlmAhmaSaBVQIYoAFgsjmHAyTQuZmdDlTX5B+45YnFmQry2eWfcrLBmZ0vVpkBZxk0GuIfiB7qgJ+E
        BDBCBCNkiumlmXaqKaYRbKrppbBY6umpqKZ6aqmqturqCKy+KmunAZSKAaoYFDDrqbXCgoSuqgKbqq+/
        7roqsUYIK+yrvSJLxLLGOlsEtLM2K20J1MpqrbTZQgvttUMUIK6xmYIrRLbMmoufbaumWhqAuxioi24B
        6ioBrLf1JoHutvmG22q/R4w7LMDToqorvwCjCyvBz45ALcL9Ksxww6rWa6nAnWJ8rLmmGgsxsR3v+rGv
        72ZasqwWk1uuuiGj2vLKHKs8cqwvuwwzuDW7OjMqOb/bcgDxspzqzjEPPLEQOR89RNJKl1Az0ThX3DTT
        Sj/dtNNSVz301VQf3fXEVk+d9dG3hvwuKkEAACH5BAUAACUALAAAAAA+AHoAAAb/wJJwSCwaj8ikclkE
        OZ9QKHNKTUavz6p2i30yvqCteHqlYMfo5BfCbrud6fhR0g3L70Q6loLvl/RnfneAV4KDIGaFhnGEUYuM
        URSJj2mNUpRjllmYYhuIT2YUG5xiHiKnqCIVFWMJCKmnr7AItCIJU7KrsK2wvb4iuKi6qLy/xrdMsr7F
        xr+4w7tirr21qMq2Uw8E29zbD0kfFgPjA+LimNra3dtJ4uTvA+jr3N9I7vDj8t3q9Uf3+PrmEWiHb5wF
        TAJCKFyoUECShAwXOqSUEGLDEBOPWIwYAiFHiA85LvQosiOSjRFJigwpMuMilAxZctSwINWCmjZxnqo5
        BaIA/5QyI2ropXNnL2RLfAI9WXJoM2M9S7osAlOh06fLmFTF+HDBQq8Ki2JNFbXkmKIJEhyFhVSJT45n
        x7Itu1KMWLl0I06lcndsT5g/x3CYQLhwYWvKECAFQOIAiceNIR9wDPnxgSQAMmvefOHC486fSUxhXLm0
        achJDJxeXXk068oKFLRGovr1ate2H8eWLZo27NyNXccGjto3ccm4j5NooNpA7ccGGih/zLyBdefXAQwh
        Pb2798fbTw//npt77vCmx5NfD1m7EPPsSTiXD7m59O7o44NXUt50/um8lbaEd//FN2BlmZ33nn4JHqic
        eyXAt1qAtjl4moT7RahfcUkQuP+gbtMlOBtmGF6YYYnAicghEiSgeNuHG1pIHIQo3qecjKbNB92Jk/Xo
        o43HOQhfbc41ZwCESrj4ImZLomGeiqwtUaIc8EF5Go4rjqHklfw1qSV+SdJXnwFUgimGAySg+ZiaDiQX
        5BistcnElv7BGeWcZm4BmZojJpkBZBkEWuEYfO7pgJxpBDBCBCM0yuiijUbqKKMRPOroopgoKummnHa6
        aaaehirqCKCOamqkAWSKAacYFHDqpqmSYoSrntLaqayzvvoprkTYauuosfIqxK+6CjsEsacGKyyypirL
        K7PEEmvssAUwK+q0JVgrqrO4aqupogGAiwG21haArRK0RnuLbhLWcrvusKG+e0S1nsqb66auuvuutvYW
        4Sqy+q7Lb7/HxoutovRKmjCn52qqa8CcOPwqxJl+K7HB0158asPb3nqwro1STMm3zTbKMcgiP6JxyOHC
        Ou7HnKZs7MqkEjwEzTbfXG/OJawss7A48xx0zj7z3PPORHf6M69D29w0wUULjbTNq0ocLiVBAAA7
</value>
  </data>
</root>